pipeline{
  agent { label 'master'}

  tools {
    maven "3.6.3"
  }

  parameters{
    choice(name: 'APP_ENV', choices: ["uat", "prod", "staging"])
    string(name: 'HELM_VERSION', defaultValue: "x.x.x")
  }

  stages{
    
        stage("Package Project"){
          steps{
            sh "mvn clean package"
          }
        }
        
        stage("Buid and Tag Image"){
          steps{
            sh "docker build -t xeng/register-api:${BUILD_NUMBER} ."
          }
        }
        
        stage("Push Image"){
          steps{
            withCredentials([usernamePassword(credentialsId: 'docker-hub', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                sh "docker login -u $USERNAME -p $PASSWORD"
                sh "docker push xeng/register-api:${BUILD_NUMBER}"
            }
          }
        }

        /*
        stage("Trigger Package helm"){
          steps{
              build wait: false, job: './package-helm', parameters: [string(name: 'APP_ENV1', value: "${APP_ENV}"), 
                  string(name: 'HELM_VERSION1', value: "${HELM_VERSION}"),
                  string(name: 'BUILD_NUMBER', value: "${BUILD_NUMBER}")]
          }
        }
        */
        
        
        stage("Package Helm Chart"){
          steps{
              sh """
                git pull origin staging
                
                sed -i 's+name:.*+name: register-app-${APP_ENV}+g' helm-chart/register-app/Chart.yaml
                sed -i 's+version:.*+version: ${HELM_VERSION}+g' helm-chart/register-app/Chart.yaml

                sed -i 's+tag:.*+tag: ${BUILD_NUMBER}+g' helm-chart/register-app/values-${APP_ENV}.yaml

                helm package helm-chart/register-app -d kubernetes
              """
          }
        }
        
        stage("Deploy Service"){
          steps{
              sh """
                ansible-playbook ansible/deploy.yml \
                -i ansible/inventory \
                -e workspace=$WORKSPACE
              """
          }
        }
      
  }
}
