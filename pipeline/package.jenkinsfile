pipeline{
  agent { label 'master'}

  parameters{
    choice(name: 'APP_ENV1', choices: ["uat", "prod"])
    string(name: 'HELM_VERSION1', defaultValue: "x.x.x")
    string(name: 'BUILD_NUMBER1', defaultValue: "x")
  }

  environment{
    APP_ENV2 = "${params.APP_ENV ?: APP_ENV1}"
    HELM_VERSION2 = "${params.HELM_VERSION ?: HELM_VERSION1}"
    BUILD_NUMBER2 = "${params.BUILD_NUMBER ?: BUILD_NUMBER1}"
  }
  
  stages{

        stage("Package Helm Chart"){
          steps{
              //git pull origin master
              //helm package helm-chart/register-app -d kubernetes
              sh """
                sed -i 's+name:.*+name: register-app-${APP_ENV2}+g' helm-chart/register-app/Chart.yaml
                sed -i 's+version:.*+version: ${HELM_VERSION2}+g' helm-chart/register-app/Chart.yaml
                sed -i 's+tag:.*+tag: ${BUILD_NUMBER2}+g' helm-chart/register-app/values-${APP_ENV2}.yaml
                sed -i 's+env:.*+env: ${APP_ENV2}+g' helm-chart/register-app/values-${APP_ENV2}.yaml
                helm package helm-chart/register-app -d kubernetes
                curl -u dara:123 https://nexus-ui.e-crops.co/repository/helm-repo/ --upload-file kubernetes/register-app-${APP_ENV2}-${HELM_VERSION2}.tgz
              """
          }
        }
        
        stage("Deploy Service"){
          steps{
              sh """
                ansible-playbook ansible/deploy.yml \
                -i ansible/inventory \
                -e app_env=${APP_ENV2} \
                -e helm_version=${HELM_VERSION2}
              """
          }
        }
        
    }
}
